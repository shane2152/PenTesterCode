from docx import Document
from docx.shared import Inches
import json
import requests


def get_json():
    """This function is what pulls the json off github and opens a local json file 'company A'. it then returns the data"""
    data = json.loads(requests.get("https://raw.githubusercontent.com/stuartgl/FoundIt/dd8961a78ec337a9ed7b1448b8f11dba72382cfc/findings_db.json").text)
    with open('test.json') as json_file:
        company = json.load(json_file)
        

    return data, company


def first_page(data, company):
    """This is the first 2 pages of the report. """
    document = Document()

    document.add_heading(company['Title'][0], 0)
    document.add_heading(company['Title'][1], 1)

    document.add_page_break()

    p = document.add_paragraph('This report is prepared for ')
    p.add_run(company['Title'][0]).bold = True
    p.add_run(' and concerns testing conducted between ')
    p.add_run(company['IPs'][0]).bold = True
    p.add_run(' and ')
    p.add_run(company['IPs'][1]).bold = True
    p.add_run(' against the following scope:')
    for scope in range(len(company['Scope'])):
        document.add_paragraph(str(company['Scope'][scope]), style='List Bullet')
    
    document.add_paragraph('Vulnerabilities Detected. A summary follows: ')
    for vd in range(len(company['VD'])):
        document.add_paragraph(str(company['VD'][vd]), style='List Bullet')
    
    return document


def creating_doc(data, company, document):
    """This is the main function that does all the docx"""
    title = 'Report_For_' + company['Title'][0] + 'docx'

    # records = (
    #     (3, '101', 'Spam'),
    #     (7, '422', 'Eggs'),
    #     (4, '631', 'Spam, spam, eggs, and spam')
    # )

    # table = document.add_table(rows=1, cols=3)
    # hdr_cells = table.rows[0].cells
    # hdr_cells[0].text = 'Qty'
    # hdr_cells[1].text = 'Id'
    # hdr_cells[2].text = 'Desc'
    # for qty, id, desc in records:
    #     row_cells = table.add_row().cells
    #     row_cells[0].text = str(qty)
    #     row_cells[1].text = id
    #     row_cells[2].text = desc



    for length in range(0, len(data['findings'])):
            for i in company['VD']:
                if i == data["findings"][length]["title"]:
                    document.add_page_break()
                    document.add_heading(str(data["findings"][length]["title"]), level=1)
                    document.add_paragraph('Severity: ' + str(data["findings"][length]["cvss"]))
                    
                    document.add_paragraph(' ')
                    document.add_paragraph(str(data["findings"][length]["cvssvector"]))
                    document.add_paragraph(str(data["findings"][length]["cvss"]))
                    document.add_paragraph(str(data["findings"][length]["category"]))

                    document.add_paragraph(' ')
                    p = document.add_paragraph()
                    p.add_run('Issue').bold = True
                    document.add_paragraph(str(data["findings"][length]["overview"]))
                    document.add_paragraph(str(data["findings"][length]["description"]))
                    document.add_paragraph(str(data["findings"][length]["impact"]))

                    document.add_paragraph(' ')
                    x = document.add_paragraph()
                    x.add_run('Recommendation').bold = True
                    document.add_paragraph(str(data["findings"][length]["recommendation"]))
                    document.add_paragraph(str(data["findings"][length]["references"]))
                    #document.add_paragraph(str(data["findings"][length]["md5"]))
                    #document.add_paragraph(data["findings"][length]["dated"])

    document.add_page_break()
    document.add_paragraph('This page marks the end of the report.')   
    document.save(title)


def main():
    data, company = get_json()
    document = first_page(data, company)
    creating_doc(data, company, document)

    





if __name__ == '__main__':
    main()
